import type { NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'
import fetchGraphQL from '../lib/fetchGithubGraphQL';
import Header from '../components/atoms/Header'
import Footer from '../components/atoms/Footer';

const Home: NextPage = () => {

const [repoName, setRepoName] = useState<string>('');
const [accountName, setAccountName] = useState<string>('');

  useEffect(() => { 
    let isMounted = true;
    fetchGraphQL(`
      query RepositoryNameQuery {
        repository(owner: "Yosuke23", name: "newrepo") {
          name
        },
        user(login: "Yosuke23") {
          name
        }
      }
    `, {}).then(response => {
      if (!isMounted) {
        return;
      }
      const data = response.data;
      console.log(response);
      setRepoName(data.repository.name);
      setAccountName(data.user.name);
    }).catch(error => {
      console.error(error);
    });


    return () => {
      isMounted = false;
    };
  }, [fetchGraphQL]);
  
  
  return (
    <>
      <Header/>
    <div className={styles.container}>
      <Head>
        <title>Create Demo App with NextApp & Relay</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

        <main className="text-center">
          
        <h1 className='text-gray-200 mt-12'>
          Create Demo App withNextApp & Relay
        </h1>

        <p className="text-gray-700 mt-32">
          {accountName !== '' ? `UserName(logged in User): ${accountName}` : 'Loading...'} 
        </p>
        <p className="text-gray-700 mb-32">
          {accountName !== '' ? `Repository: ${repoName}` : 'Loading...'} 
        </p>

      </main>


      
      </div>
      <Footer />
    </>
    
  )
}

export default Home
